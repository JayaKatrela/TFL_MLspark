pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'jayakatrela/tflforecaste:latest'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/JayaKatrela/TFL_MLspark.git', branch: 'main'
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    sh 'python3 -m unittest discover -s test -p "test_forecasteml.py"'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'jayahub', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                        sh 'echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin'
                    }
                    sh 'docker build -t ${DOCKER_IMAGE} kubeml/.'
                }
            }
        }

        stage('Run Docker Unit Tests') {
            steps {
                script {
                    echo "üö¢ Running Docker tests..."
                    sh 'chmod +x ./kubeml/test/test_docker.sh'
                    sh './kubeml/test/test_docker.sh'
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    // Push the image
                    sh 'docker push ${DOCKER_IMAGE}'
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Apply the Kubernetes deployment and service files
                    sh 'kubectl apply -f kubeml/deployment.yaml'
                }
            }
        }

        stage('Run Kubernetes Tests') {
            steps {
                script {
                    echo "‚úÖ Validating Kubernetes Job..."
                    sh './kubeml/test/test_kubernetes.sh'
                }
            }
        }
    }

    post {
        success {
            // Output the full URL to access the Flask API
            echo "Build succeeded. ML Model Created for TFL Train Delays"
        }
        failure {
            echo "‚ùå Pipeline failed. Check logs for details."
        }
    }
}
